plugins {
	id 'java'
	id 'maven-publish'
	id 'eclipse'
}

group = 'com.example'
version = '1.0-SNAPSHOT'
description = 'gradle-jersey-heroku-webapp'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
	compile group: 'org.glassfish.jersey', name: 'jersey-bom', version: '2.29.1', ext: 'pom'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.29.1'
	compile 'org.glassfish.jersey.inject:jersey-hk2:2.29.1'
	compile 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.29.1'
	compile 'org.glassfish.grizzly:grizzly-http-server:2.4.4'
	compile 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.29.1'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.29.1'
	compile 'org.glassfish.jersey.core:jersey-server:2.29.1'
	testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-bundle:+'
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from(configurations.compile)
}


task run (type: JavaExec, dependsOn: 'classes') {
    group      ' com.example'
    description 'runs com.example'
    main 'com.example.heroku.Main'
    classpath sourceSets.main.runtimeClasspath
}

jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'com.example.heroku.Main'
    )
  }
}

task stage(dependsOn: ['jar', 'copyToLib', 'clean']) {
	copyToLib.mustRunAfter clean
	jar.mustRunAfter copyToLib
}

stage.dependsOn(copyToLib)

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

